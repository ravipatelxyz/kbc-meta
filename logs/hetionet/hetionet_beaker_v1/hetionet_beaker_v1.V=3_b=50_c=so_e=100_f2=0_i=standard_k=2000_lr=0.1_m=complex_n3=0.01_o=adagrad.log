./bin/kbc-cli.py --train data/hetionet/train.tsv --dev data/hetionet/valid.tsv --test data/hetionet/test.tsv -m complex -k 2000 -b 50 -e 100 --F2 0 --N3 0.01 -l 0.1 -I standard -V 3 -o adagrad -c so -q
{'F2': 0.0,
 'N3': 0.01,
 'batch_size': 50,
 'corruption': 'so',
 'dev': 'data/hetionet/valid.tsv',
 'embedding_size': 2000,
 'epochs': 100,
 'eval_batch_size': None,
 'input_type': 'standard',
 'learning_rate': 0.1,
 'load': None,
 'model': 'complex',
 'optimizer': 'adagrad',
 'quiet': True,
 'save': None,
 'seed': 0,
 'test': 'data/hetionet/test.tsv',
 'test_i': None,
 'test_ii': None,
 'train': 'data/hetionet/train.tsv',
 'validate_every': 3}
INFO:kbc-cli.py:Device: cuda
INFO:kbc-cli.py:Model state:
INFO:kbc-cli.py:	entities.weight	torch.Size([45160, 4000])
INFO:kbc-cli.py:	predicates.weight	torch.Size([25, 4000])
INFO:kbc-cli.py:Epoch 1/100	Loss 18.7264 ± 2.2522
INFO:kbc-cli.py:Epoch 2/100	Loss 15.0618 ± 0.7887
INFO:kbc-cli.py:Epoch 3/100	Loss 13.9481 ± 0.6549
INFO:kbc-cli.py:Epoch 3/100	dev results	MRR 0.348751	H@1 0.272240	H@3 0.377030	H@5 0.430180	H@10 0.500420	H@20 0.568940	H@50 0.650030	H@100 0.709490
INFO:kbc-cli.py:Epoch 3/100	test results	MRR 0.348367	H@1 0.271430	H@3 0.378620	H@5 0.429750	H@10 0.497500	H@20 0.566520	H@50 0.649530	H@100 0.709730
INFO:kbc-cli.py:Epoch 4/100	Loss 13.3627 ± 0.6021
INFO:kbc-cli.py:Epoch 5/100	Loss 13.0065 ± 0.5738
INFO:kbc-cli.py:Epoch 6/100	Loss 12.7645 ± 0.5422
INFO:kbc-cli.py:Epoch 6/100	dev results	MRR 0.379777	H@1 0.303860	H@3 0.411260	H@5 0.460840	H@10 0.526760	H@20 0.591440	H@50 0.669380	H@100 0.726160
INFO:kbc-cli.py:Epoch 6/100	test results	MRR 0.379476	H@1 0.303390	H@3 0.411160	H@5 0.461010	H@10 0.525820	H@20 0.590490	H@50 0.669770	H@100 0.725700
INFO:kbc-cli.py:Epoch 7/100	Loss 12.5866 ± 0.5229
INFO:kbc-cli.py:Epoch 8/100	Loss 12.4488 ± 0.5104
INFO:kbc-cli.py:Epoch 9/100	Loss 12.3380 ± 0.4928
INFO:kbc-cli.py:Epoch 9/100	dev results	MRR 0.392103	H@1 0.318640	H@3 0.421650	H@5 0.471780	H@10 0.535750	H@20 0.598480	H@50 0.673890	H@100 0.730490
INFO:kbc-cli.py:Epoch 9/100	test results	MRR 0.391841	H@1 0.318760	H@3 0.420720	H@5 0.469880	H@10 0.535370	H@20 0.598660	H@50 0.675050	H@100 0.729700
INFO:kbc-cli.py:Epoch 10/100	Loss 12.2464 ± 0.4797
INFO:kbc-cli.py:Epoch 11/100	Loss 12.1691 ± 0.4688
INFO:kbc-cli.py:Epoch 12/100	Loss 12.1027 ± 0.4617
INFO:kbc-cli.py:Epoch 12/100	dev results	MRR 0.396511	H@1 0.323300	H@3 0.426670	H@5 0.475400	H@10 0.539170	H@20 0.599330	H@50 0.674610	H@100 0.730940
INFO:kbc-cli.py:Epoch 12/100	test results	MRR 0.395329	H@1 0.322060	H@3 0.425480	H@5 0.473810	H@10 0.538140	H@20 0.599210	H@50 0.675450	H@100 0.729420
INFO:kbc-cli.py:Epoch 13/100	Loss 12.0450 ± 0.4519
INFO:kbc-cli.py:Epoch 14/100	Loss 11.9941 ± 0.4435
INFO:kbc-cli.py:Epoch 15/100	Loss 11.9488 ± 0.4346
INFO:kbc-cli.py:Epoch 15/100	dev results	MRR 0.397080	H@1 0.324580	H@3 0.427230	H@5 0.474030	H@10 0.539500	H@20 0.598940	H@50 0.674900	H@100 0.731030
INFO:kbc-cli.py:Epoch 15/100	test results	MRR 0.396448	H@1 0.323320	H@3 0.426830	H@5 0.474530	H@10 0.538270	H@20 0.599620	H@50 0.675470	H@100 0.728690
INFO:kbc-cli.py:Epoch 16/100	Loss 11.9081 ± 0.4308
INFO:kbc-cli.py:Epoch 17/100	Loss 11.8715 ± 0.4251
INFO:kbc-cli.py:Epoch 18/100	Loss 11.8383 ± 0.4174
INFO:kbc-cli.py:Epoch 18/100	dev results	MRR 0.398334	H@1 0.325610	H@3 0.428770	H@5 0.476720	H@10 0.538110	H@20 0.599100	H@50 0.674000	H@100 0.729300
INFO:kbc-cli.py:Epoch 18/100	test results	MRR 0.397584	H@1 0.324940	H@3 0.428710	H@5 0.475640	H@10 0.537360	H@20 0.598840	H@50 0.674700	H@100 0.728290
INFO:kbc-cli.py:Epoch 19/100	Loss 11.8076 ± 0.4129
INFO:kbc-cli.py:Epoch 20/100	Loss 11.7797 ± 0.4089
INFO:kbc-cli.py:Epoch 21/100	Loss 11.7539 ± 0.4047
INFO:kbc-cli.py:Epoch 21/100	dev results	MRR 0.399624	H@1 0.327410	H@3 0.429650	H@5 0.476180	H@10 0.538510	H@20 0.598690	H@50 0.673010	H@100 0.729210
INFO:kbc-cli.py:Epoch 21/100	test results	MRR 0.398804	H@1 0.326650	H@3 0.429550	H@5 0.475200	H@10 0.538250	H@20 0.598650	H@50 0.673160	H@100 0.727900
INFO:kbc-cli.py:Epoch 22/100	Loss 11.7299 ± 0.4025
